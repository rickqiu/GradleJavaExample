package com.company.persistence;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.company.dto.Event;

public class DatabaseUtil {
	
	public static final String DB_SCHEMA_SQL = 
	    "CREATE TABLE IF NOT EXISTS alert_events  ( "
		+ "id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, "
		+ "user_id VARCHAR(20) NOT NULL, "
		+ "state CHAR(8) NOT NULL, " 
		+ "type VARCHAR(20), "
		+ "host VARCHAR(20), "
		+ "timestamp BIGINT NOT NULL, "
		+ "alert TINYINT NOT NULL)";

	public static final String EVENT_INSERT = 
	    "INSERT INTO alert_events (user_id, state, type, host, timestamp, alert) VALUES (?)";
	
	public static List<String> getSqlForInsertEvents(List<Event> events){
		
		List<String> inserts = new ArrayList<String>();

		for (Event evt : events) {
			StringBuilder values = new StringBuilder();
			values.append('\'').append(evt.getId()).append('\'').append(",")
			.append('\'').append(evt.getState()).append('\'').append(",");
			
			if (evt.getType() == null) {
				values.append("NULL,");
			} else {
				values.append('\'').append(evt.getType()).append('\'').append(",");
			}
			
			if (evt.getHost() == null) {
				values.append("NULL,");
			} else {
				values.append('\'').append(evt.getHost()).append('\'').append(",");
			}
			
			values.append(evt.getTimestamp()).append(",");
			
			if (evt.getAlert()) {
				values.append("1");
			} else {
				values.append("0");
			}
			
			String sql = EVENT_INSERT.replace("?", values.toString());

			inserts.add(sql);	
		}

		return inserts;
	}
	
	public static void close(Statement st, Connection conn) {
		if (st != null) {
			try {
				st.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		
		if (conn != null) {
			try {
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}	
	}
}